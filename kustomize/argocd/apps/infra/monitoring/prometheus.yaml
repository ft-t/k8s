---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: prometheus
    name: in-cluster
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 43.2.0
    helm:
      values: |
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: local-storage-hdd
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi
        kubeScheduler:
          enabled: false
        kubelet:
          enabled: false
        kubeControllerManager:
          enabled: false
        kubeProxy:
          enabled: false
        nodeExporter:
          enabled: true
        kubeStateMetrics:
          enabled: true
        grafana:
          enabled: true
          ingress:
            enabled: true
            hosts: ["grafana.qqw.ovh"]
        defaultRules:
          disabled:
            KubeletDown: true
          rules:
            kubeSchedulerAlerting: false
            kubeSchedulerRecording: false
            kubelet: false
            kubeControllerManager: false
            kubeProxy: false
        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false
            additionalScrapeConfigs:
              - job_name: 'kubernetes-pods'
                kubernetes_sd_configs:
                  - role: pod
                relabel_configs:
                  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                    action: keep
                    regex: true
                  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                    action: replace
                    target_label: __metrics_path__
                    regex: (.+)
                  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                    action: replace
                    regex: (.+):(?:\d+);(\d+)
                    replacement: ${1}:${2}
                    target_label: __address__
                  - action: labelmap
                    regex: __meta_kubernetes_pod_label_(.+)
                  - source_labels: [__meta_kubernetes_namespace]
                    action: replace
                    target_label: kubernetes_namespace
                  - source_labels: [__meta_kubernetes_pod_name]
                    action: replace
                    target_label: kubernetes_pod_name
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: local-storage-nvme
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi
          ingress:
            enabled: true
            hosts:
              - prom.qqw.ovh
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    automated:
      prune: true
      selfHeal: true
